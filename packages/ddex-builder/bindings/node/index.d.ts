/* tslint:disable */
/* eslint-disable */

/* auto-generated by NAPI-RS */

export interface Release {
  releaseId: string
  releaseType: string
  title: string
  artist: string
  label?: string
  catalogNumber?: string
  upc?: string
  releaseDate?: string
  genre?: string
  parentalWarning?: boolean
  trackIds: Array<string>
  metadata?: Record<string, string>
}
export interface Resource {
  resourceId: string
  resourceType: string
  title: string
  artist: string
  isrc?: string
  duration?: string
  trackNumber?: number
  volumeNumber?: number
  metadata?: Record<string, string>
}
export interface ValidationResult {
  isValid: boolean
  errors: Array<string>
  warnings: Array<string>
}
export interface BuilderStats {
  releasesCount: number
  resourcesCount: number
  totalBuildTimeMs: number
  lastBuildSizeBytes: number
  validationErrors: number
  validationWarnings: number
}
export declare function batchBuild(requests: Array<string>): Promise<Array<string>>
export declare function validateStructure(xml: string): Promise<ValidationResult>
export declare class DdexBuilder {
  constructor()
  addRelease(release: Release): void
  addResource(resource: Resource): void
  build(): Promise<string>
  validate(): Promise<ValidationResult>
  getStats(): BuilderStats
  reset(): void
}
